version: '3.9'

x-volumes:
  &default-volume
  volumes:
    - config:/var/www/oro_app/config
    - public:/var/www/oro_app/public
    - var:/var/www/oro_app/var

x-environment:
  &default-environment
  environment:
    - ORO_APP_DOMAIN=${ORO_APP_DOMAIN-oro.demo}

services:
  init:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}-backup-sample_data:${ORO_APP_VERSION-latest}
    hostname: init
    command: bash
      -c "[ -e /var/lib/mysql/wait.lock ] || { rm -rf /var/www/oro_app/config/* /var/www/oro_app/public/* /var/www/oro_app/var/* /var/lib/mysql/* ;
      tar -xvpzf /backup/backup.tar.gz -C / --numeric-owner && touch /var/lib/mysql/wait.lock && echo \"Volumes restored. You can run 'docker-compose up -d'\" ; } "
    volumes:
      - config:/var/www/oro_app/config
      - public:/var/www/oro_app/public
      - var:/var/www/oro_app/var
      - mysql:/var/lib/mysql

  db:
    image: docker.io/library/mysql:8
    hostname: mysql
    labels:
      com.symfony.server.service-prefix: ORO_DB
    cap_add:
      - SYS_NICE
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: orodbpass
      MYSQL_DATABASE: orodb
      MYSQL_USER: orodbuser
      MYSQL_PASSWORD: orodbpass
      MYSQL_DOCKER_OPTION: "--default-authentication-plugin=mysql_native_password"
    healthcheck:
      test: "mysqladmin ping --silent -u$${MYSQL_USER} -p$${MYSQL_PASSWORD}"
    restart: unless-stopped
    depends_on:
      init:
        condition: service_completed_successfully
    ports:
      - 3307:3306
    networks:
      - backend

  mail:
    image: mailhog/mailhog
    hostname: mail
    ports:
      - 8025:8025
    restart: unless-stopped
    networks:
      - frontend
      - backend

  php-fpm:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}:${ORO_APP_VERSION-latest}
    hostname: php-fpm
    # healthcheck:
      # test: "php-fpm-healthcheck"
    restart: unless-stopped
    command: php-fpm
    << : *default-volume
    << : *default-environment
    depends_on:
      - "db"
    networks:
      - frontend
      - backend

  nginx:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}:${ORO_APP_VERSION-latest}
    hostname: nginx
    # healthcheck:
      # test: "curl -s --connect-timeout 5 -o /dev/null http://localhost/health"
    restart: unless-stopped
    command: nginx
    depends_on:
      - "php-fpm"
      - "ws"
    << : *default-volume
    << : *default-environment
    networks:
      frontend:
        aliases:
          - ${ORO_APP_DOMAIN-oro.demo}

  ws:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}:${ORO_APP_VERSION-latest}
    hostname: ws
    user: ${USER_RUNTIME:-www-data}
    restart: unless-stopped
    init: true
    command: ws
    depends_on:
      - "php-fpm"
    << : *default-volume
    << : *default-environment
    networks:
      - frontend
      - backend

  consumer:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}:${ORO_APP_VERSION-latest}
    hostname: consumer
    user: ${USER_RUNTIME:-www-data}
    restart: unless-stopped
    init: true
    command: consumer
    depends_on:
      - "php-fpm"
    << : *default-volume
    << : *default-environment
    networks:
      - backend

  cron:
    image: ${ORO_IMAGE-docker.io/oroinc/commerce-crm-application}:${ORO_APP_VERSION-latest}
    hostname: cron
    restart: unless-stopped
    command: cron
    depends_on:
      - "php-fpm"
    << : *default-volume
    << : *default-environment
    networks:
      - backend

volumes:
  mysql: {}
  config: {}
  public: {}
  var: {}

networks:
  frontend:
    external:
      name: galileo-proxy
  backend: